---
# file: tasks/nvm.yml

- name: "RVM | Check"
  stat:
    path: "{{ rvm_install_dir }}"
  register: fubarhouse_ruby_rvm_installed
  # ignore_errors: yes
  no_log: yes

- name: "RVM | Searching imported keys"
  command: gpg --list-keys 'RVM'
  register: search_gpg_keys
  changed_when: >
    ('"(RVM signing)" not in search_gpg_keys.stdout') or
    ('"gpg: error reading key: public key not found" in search_gpg_keys.stdout')
  failed_when: false
  when: secure_rvm_install|bool == true

- name: "RVM | Ensure GPG key is imported"
  raw: curl -sSL https://rvm.io/mpapis.asc | gpg2 --import -
  register: gpg_import_command
  changed_when: '"imported: 1" in gpg_import_command.stdout'
  when: >
    ('"(RVM signing)" not in search_gpg_keys.stdout') and
    (secure_rvm_install|bool == true)

- name: "RVM | Clone/Update"
  git:
    repo: "{{ rvm_repo}}"
    dest: "{{ rvm_install_dir }}"
    clone: yes
    update: no
    force: no
    version: master
    recursive: false

- name: "RVM | Install"
  shell: "{{ rvm_install_dir }}/{{ rvm_install_path }}/{{ rvm_install_exec }}"
  when: fubarhouse_ruby_rvm_installed.stat.exists|bool == false

- name: "RVM | Ensuring updated..."
  shell: "{{ rvm_install_dir }}/{{ rvm_path }}/{{ rvm_exec }} get stable --auto-dotfiles"
  changed_when: false
  when: secure_rvm_install|bool == true

- name: "RVM | Reloading"
  shell: "{{ rvm_install_dir }}/{{ rvm_path }}/{{ rvm_exec }} reload"
  register: rvm_reload
  changed_when: false
  failed_when: '"RVM reloaded!" not in rvm_reload.stdout'

- name: "RVM | Configure autolibs"
  shell: "{{ rvm_install_dir }}/{{ rvm_path }}/{{ rvm_exec }} autolibs {{ rvm_autolibs_mode }}"
  changed_when: false
  failed_when: false