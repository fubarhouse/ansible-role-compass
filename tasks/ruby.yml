---
# file: tasks/ruby.yml

- name: "Ruby | Check version"
  shell: "{{ rvm_install_dir }}/{{ rvm_path }}/{{ rvm_exec }} list"
  register: installed_ruby_versions
  changed_when: false

- name: "Ruby | Install ruby"
  shell: "{{ rvm_install_dir }}/{{ rvm_path }}/{{ rvm_exec }} install {{ item }} --autolibs=read-only"
  with_items: ["{{ ruby_version }}", "{{ ruby_versions }}"]
  when:
    - '"{{ item }}" not in installed_ruby_versions.stdout'

- name: "Ruby | Generate new list of installed versions"
  shell: "{{ rvm_install_dir }}/{{ rvm_path }}/{{ rvm_exec }} list"
  register: post_execute_ruby_versions
  changed_when: false

- name: "Ruby | Remove default alias"
  shell: "{{ rvm_install_dir }}/{{ rvm_path }}/{{ rvm_exec }} alias create default {{ ruby_version }}"
  when: >
    ('"* ruby-" + ruby_version not in post_execute_ruby_versions.stdout') or
    ('"rvm alias create default <ruby>" in post_execute_ruby_versions')
  changed_when: false


- name: "Ruby | Set default alias"
  shell: "{{ rvm_install_dir }}/{{ rvm_path }}/{{ rvm_exec }} alias create default {{ ruby_version }}"
  changed_when: false
  when:  >
    ('"* ruby-" + ruby_version not in post_execute_ruby_versions.stdout') or
    ('"rvm alias create default <ruby>" in post_execute_ruby_versions')

- name: "Ruby | Switching version"
  shell: "/bin/bash --login -c '{{ rvm_install_dir }}/{{ rvm_path }}/{{ rvm_exec_alt }} use {{ ruby_version }} --default'"
  args:
    executable: /bin/bash
  register: switch_ver
  changed_when: '"Using {{ rvm_path}}/gems/ruby-{{ ruby_version }}" in switch_ver.stdout'
  failed_when: '"RVM is not a function" in switch_ver.stderr'
  when:  '"=* ruby-" + ruby_version not in post_execute_ruby_versions.stdout'

- name: "Ruby | Import exports"
  lineinfile:
    dest: "{{ item.item }}"
    regexp: "gems/ruby-{{ ruby_version }}/bin"
    line: "export PATH=$PATH:{{ rvm_install_dir }}/{{ rvm_path }}//gems/ruby-{{ ruby_version }}/bin"
    state: present
  with_items: "{{ rvm_stat_shell_profiles.results }}"
  changed_when: false
  when: item.stat.exists|bool == true

- name: "Ruby | Verify Ruby version"
  shell: "/bin/bash --login -c 'ruby -v'"
  register: verify_default_ruby_versions
  changed_when: false
  failed_when: 'ruby-" + ruby_version not in verify_default_ruby_versions.stdout'
  when: install_ruby|bool == true